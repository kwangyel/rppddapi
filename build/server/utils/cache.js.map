{"version":3,"sources":["../../../api/server/utils/cache.js"],"names":["Redis","require","redis","process","env","REDIS_PORT","REDIS_HOST","util","Util","module","exports","checkResponseCache","req","res","next","console","log","get","originalUrl","cachedResponse","setSuccess","JSON","parse","send","addResponseToCache","data","tocache","set","stringify"],"mappings":";;;;;;;;AAEA;;AAFA,IAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,KAAK,GAAG,IAAIF,KAAJ,CAAUG,OAAO,CAACC,GAAR,CAAYC,UAAtB,EAAkCF,OAAO,CAACC,GAAR,CAAYE,UAA9C,CAAd;AAGA,IAAMC,IAAI,GAAC,IAAIC,iBAAJ,EAAX;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf;AACMC,EAAAA,kBAFS;AAAA;AAAA;AAAA,kDAEWC,GAFX,EAEeC,GAFf,EAEoBC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAHa;AAAA,qBAIgBd,KAAK,CAACe,GAAN,CAAUL,GAAG,CAACM,WAAd,CAJhB;;AAAA;AAIPC,cAAAA,cAJO;;AAKb,kBAAGA,cAAH,EAAkB;AAChBZ,gBAAAA,IAAI,CAACa,UAAL,CAAgB,GAAhB,EAAoB,4BAApB,EAAiDC,IAAI,CAACC,KAAL,CAAWH,cAAX,CAAjD;AACAZ,gBAAAA,IAAI,CAACgB,IAAL,CAAUV,GAAV;AACD,eAHD,MAGK;AACHC,gBAAAA,IAAI;AACL;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAYf;AACMU,EAAAA,kBAbS;AAAA;AAAA;AAAA,mDAaWZ,GAbX,EAaeC,GAbf,EAaoBC,IAbpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAeVF,GAAG,CAACa,IAfM;AAAA;AAAA;AAAA;;AAgBPC,cAAAA,OAhBO,GAgBCd,GAAG,CAACa,IAhBL;AAAA;AAAA,qBAiBLvB,KAAK,CAACyB,GAAN,CAAUf,GAAG,CAACM,WAAd,EAA0BG,IAAI,CAACO,SAAL,CAAehB,GAAG,CAACa,IAAnB,CAA1B,CAjBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["const Redis = require('ioredis');\r\nconst redis = new Redis(process.env.REDIS_PORT, process.env.REDIS_HOST);\r\nimport Util from '../utils/Utils';\r\n\r\nconst util=new Util();\r\n\r\nmodule.exports = {\r\n  /** Koa middleware function to check cache before continuing to any endpoint handlers */\r\n  async checkResponseCache (req,res, next) {\r\n    console.log('checkResponseCache');\r\n    const cachedResponse = await redis.get(req.originalUrl);\r\n    if(cachedResponse){\r\n      util.setSuccess(200,'Pests Retrieved from cache',JSON.parse(cachedResponse));\r\n      util.send(res);\r\n    }else{\r\n      next();\r\n    }\r\n  },\r\n  /** Koa middleware function to insert response into cache */\r\n  async addResponseToCache (req,res, next) {\r\n    // console.log(JSON.stringify(req.data));\r\n    if(req.data){\r\n      var tocache=req.data;\r\n      await redis.set(req.originalUrl,JSON.stringify(req.data));\r\n    }\r\n  }\r\n}\r\n"],"file":"cache.js"}