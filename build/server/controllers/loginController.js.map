{"version":3,"sources":["../../../api/server/controllers/loginController.js"],"names":["util","Util","loginController","req","res","username","body","password","loginService","getToken","token","setAuth","sendAuth","console","log","resp","bcrypt","hashSync","setSuccess","send","setError"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAC,IAAIC,iBAAJ,EAAX;;IAEMC,e;;;;;;;;;;;;oDACcC,G,EAAIC,G;;;;;;;AAEfC,gBAAAA,Q,GAASF,GAAG,CAACG,IAAJ,CAASD,Q;AAClBE,gBAAAA,Q,GAASJ,GAAG,CAACG,IAAJ,CAASC,Q;;uBACNC,yBAAaC,QAAb,CAAsBJ,QAAtB,EAA+BE,QAA/B,C;;;AAAZG,gBAAAA,K;;AAEN,oBAAGA,KAAH,EACA;AACCV,kBAAAA,IAAI,CAACW,OAAL,CAAa,GAAb,EAAiB,YAAjB,EAA8B,IAA9B,EAAmCD,KAAnC,EAAyCL,QAAzC;AACA,iBAHD,MAGK;AACJL,kBAAAA,IAAI,CAACW,OAAL,CAAa,GAAb,EAAiB,cAAjB;AACA,iB,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;iDACOX,IAAI,CAACY,QAAL,CAAcR,GAAd,C;;;;;AAEPJ,gBAAAA,IAAI,CAACW,OAAL,CAAa,GAAb;AACAE,gBAAAA,OAAO,CAACC,GAAR;iDACOd,IAAI,CAACY,QAAL,CAAcR,GAAd,C;;;;;;;;;;;;;;;;;;;;;qDAIYD,G,EAAIC,G;;;;;;;AAGjBW,gBAAAA,I,GAAMC,mBAAOC,QAAP,CAAgB,YAAhB,EAA6B,EAA7B,C;AACZjB,gBAAAA,IAAI,CAACkB,UAAL,CAAgB,GAAhB,EAAoBH,IAApB;kDACOf,IAAI,CAACmB,IAAL,CAAUf,GAAV,C;;;;;AAEPJ,gBAAAA,IAAI,CAACoB,QAAL,CAAc,GAAd;kDACOpB,IAAI,CAACmB,IAAL,CAAUf,GAAV,C;;;;;;;;;;;;;;;;;;;;eAKKF,e","sourcesContent":["import loginService from '../services/loginService';\r\nimport Util from '../utils/Utils';\r\nimport bcrypt from 'bcrypt';\r\n\r\nconst util=new Util();\r\n\r\nclass loginController{\r\n\tstatic async login(req,res){\r\n\t\ttry{\r\n\t\t\tconst username=req.body.username;\r\n\t\t\tconst password=req.body.password;\r\n\t\t\tconst token=await loginService.getToken(username,password);\r\n\r\n\t\t\tif(token)\r\n\t\t\t{\r\n\t\t\t\tutil.setAuth(200,\"Authorized\",true,token,username);\r\n\t\t\t}else{\r\n\t\t\t\tutil.setAuth(401,\"Unauthorized\")\r\n\t\t\t}\r\n\t\t\t// if(req.body.username==\"admin\"){\r\n\t\t\t// \tif(req.body.password==\"admin\"){\r\n\t\t\t// \t\tutil.setSuccess(200,'authenticated');\r\n\t\t\t// \t}else{\r\n\t\t\t// \t\tutil.setSuccess(200,'not authenticated password incorrect');\r\n\t\t\t// \t}\r\n\t\t\t// \treturn util.send(res);\r\n\t\t\t// }else{\r\n\t\t\t// \tutil.setSuccess(200,'user not found');\r\n\t\t\t// }\r\n\t\t\treturn util.sendAuth(res);\r\n\t\t}catch(error){\r\n\t\t\tutil.setAuth(400,error);\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn util.sendAuth(res);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getHash(req,res){\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\tconst resp= bcrypt.hashSync('bafra@2019',10);\r\n\t\t\tutil.setSuccess(200,resp);\r\n\t\t\treturn util.send(res);\r\n\t\t}catch(error){\r\n\t\t\tutil.setError(400,error);\r\n\t\t\treturn util.send(res);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default loginController;\r\n"],"file":"loginController.js"}