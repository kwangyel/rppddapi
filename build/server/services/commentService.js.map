{"version":3,"sources":["../../../api/server/services/commentService.js"],"names":["pestService","newComment","database","comments","create","id","findAll","where","pest_id","Number","theComment"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,W;;;;;;;;;;;;oDAEqBC,U;;;;;;;uBAERC,mBAASC,QAAT,CAAkBC,MAAlB,CAAyBH,UAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAOUI,E;;;;;;;;uBAEHH,mBAASC,QAAT,CAAkBG,OAAlB,CAA0B;AAChDC,kBAAAA,KAAK,EAAC;AAACC,oBAAAA,OAAO,EAAEC,MAAM,CAACJ,EAAD;AAAhB;AAD0C,iBAA1B,C;;;AAAjBK,gBAAAA,U;kDAGCA,U;;;;;;;;;;;;;;;;;;;;;;;;;eAOKV,W","sourcesContent":["import database from '../src/models';\r\n\r\nclass pestService {\r\n\r\n  static async addComments(newComment) {\r\n    try {\r\n      return await database.comments.create(newComment);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n\r\n  }\r\n\r\n  static async getCommentsId(id){\r\n\t\ttry{\r\n\t\t\tconst theComment=await database.comments.findAll({\r\n\t\t\t\twhere:{pest_id: Number(id)}\r\n\t\t\t});\r\n\t\t\treturn theComment;\r\n\t\t}catch(error){\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default pestService;\r\n"],"file":"commentService.js"}