{"version":3,"sources":["../../../api/server/services/loginService.js"],"names":["loginService","username","password","token","database","user","findOne","where","then","console","log","bcrypt","compareSync","jwt","sign","id","config","secret","expiresIn"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEMA,Y;;;;;;;;;;;;oDACiBC,Q,EAASC,Q;;;;;;;AAE7B;AACIC,gBAAAA,K,GAAM,E;;uBACGC,mBAASC,IAAT,CAAcC,OAAd,CAAsB;AAACC,kBAAAA,KAAK,EAAC;AAACN,oBAAAA,QAAQ,EAACA;AAAV;AAAP,iBAAtB,EAAmDO,IAAnD,CAAwD,UAAAH,IAAI,EAAE;AAC1E,sBAAG,CAACA,IAAJ,EAAU;AACTI,oBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACA,mBAHD,MAGM,IAAGC,mBAAOC,WAAP,CAAmBV,QAAnB,EAA4BG,IAAI,CAACH,QAAjC,CAAH,EAA8C;AACnDC,oBAAAA,KAAK,GAACU,yBAAIC,IAAJ,CAAS;AAACC,sBAAAA,EAAE,EAACV,IAAI,CAACU;AAAT,qBAAT,EAAsBC,mBAAOC,MAA7B,EAAoC;AAACC,sBAAAA,SAAS,EAAC,KAAG;AAAd,qBAApC,CAAN;AACA,2BAAOf,KAAP;AACA,mBAHK,MAGD;AACJM,oBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA;AACA;AACD,iBAXY,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAmBDV,Y","sourcesContent":["import database from '../src/models';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config'\r\nimport bcrypt from 'bcrypt';\r\n\r\nclass loginService{\r\n\tstatic async getToken(username,password){\r\n\t\ttry{\r\n\t\t\t// user=database.user.findOne();\r\n\t\t\tvar token=''\r\n\t\t\treturn await database.user.findOne({where:{username:username}}).then(user=>{\r\n\t\t\t\tif(!user) {\r\n\t\t\t\t\tconsole.log('user not found');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}else if(bcrypt.compareSync(password,user.password)){\r\n\t\t\t\t\ttoken=jwt.sign({id:user.id},config.secret,{expiresIn:60*60});\r\n\t\t\t\t\treturn token;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log('password not found');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}catch(error){\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nexport default loginService;\r\n"],"file":"loginService.js"}