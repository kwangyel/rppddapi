{"version":3,"sources":["../../../api/server/routes/protectedRoutes.js"],"names":["router","use","req","res","next","token","header","jwt","verify","config","secret","err","decoded","json","message","console","log","send","get","loginController","getHash","post","pestController","addPest","put","updatePest","deteledPest"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMA,MAAM,GAAC,sBAAb;AAEAA,MAAM,CAACC,GAAP,CAAW,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC1B,MAAIC,KAAK,GAACH,GAAG,CAACI,MAAJ,CAAW,eAAX,CAAV;;AAEA,MAAGD,KAAH,EAAS;AACRE,6BAAIC,MAAJ,CAAWH,KAAX,EAAiBI,mBAAOC,MAAxB,EAA+B,UAACC,GAAD,EAAKC,OAAL,EAAe;AAC7C,UAAGD,GAAH,EAAO;AACN,eAAOR,GAAG,CAACU,IAAJ,CAAS;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAT,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,OAHD,MAGK;AACJd,QAAAA,GAAG,CAACU,OAAJ,GAAYA,OAAZ;AACAR,QAAAA,IAAI;AACJ;AACD,KARD;AASA,GAVD,MAUK;AACJD,IAAAA,GAAG,CAACc,IAAJ,CAAS;AACRH,MAAAA,OAAO,EAAC;AADA,KAAT;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AACD,CAnBD;AAsBAhB,MAAM,CAACkB,GAAP,CAAW,OAAX,EAAmBC,4BAAgBC,OAAnC;AACApB,MAAM,CAACqB,IAAP,CAAY,MAAZ,EAAmBC,2BAAeC,OAAlC;AACAvB,MAAM,CAACwB,GAAP,CAAW,aAAX,EAAyBF,2BAAeG,UAAxC;AACAzB,MAAM,UAAN,CAAc,aAAd,EAA4BsB,2BAAeI,WAA3C;eAEe1B,M","sourcesContent":["import {Router} from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config'\r\nimport loginController from '../controllers/loginController';\r\nimport pestController from '../controllers/pestController';\r\n\r\n\r\nconst router=Router();\r\n\r\nrouter.use((req,res,next)=>{\r\n\tvar token=req.header(\"Authorization\");\r\n\r\n\tif(token){\r\n\t\tjwt.verify(token,config.secret,(err,decoded)=>{\r\n\t\t\tif(err){\r\n\t\t\t\treturn res.json({message:'invalid token'});\r\n\t\t\t\tconsole.log('invaldi token');\r\n\t\t\t}else{\r\n\t\t\t\treq.decoded=decoded;\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t});\r\n\t}else{\r\n\t\tres.send({\r\n\t\t\tmessage:'No token provided'\r\n\t\t});\r\n\t\tconsole.log('No token provided');\r\n\t}\r\n});\r\n\r\n\r\nrouter.get('/test',loginController.getHash);\r\nrouter.post('/add',pestController.addPest);\r\nrouter.put('/update/:id',pestController.updatePest);\r\nrouter.delete('/delete/:id',pestController.deteledPest);\r\n\r\nexport default router;"],"file":"protectedRoutes.js"}