{"version":3,"sources":["../../../api/server/routes/pictureRoute.js"],"names":["router","path","process","env","STATIC","upload","dest","get","piccontroller","getPicById","post","single","req","res","tmp_path","file","target_path","originalname","src","fs","createReadStream","createWriteStream","pipe","on","json","error","send"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAC,sBAAb;AACA,IAAMC,IAAI,GAACC,OAAO,CAACC,GAAR,CAAYC,MAAvB;AACA,IAAMC,MAAM,GAAC,wBAAO;AAACC,EAAAA,IAAI,EAACL;AAAN,CAAP,CAAb;AAEAD,MAAM,CAACO,GAAP,CAAW,UAAX,EAAsBC,0BAAcC,UAApC;AACAT,MAAM,CAACU,IAAP,CAAY,SAAZ,EAAsBL,MAAM,CAACM,MAAP,CAAc,OAAd,CAAtB,EAA6C,UAACC,GAAD,EAAKC,GAAL,EAAW;AACvD,MAAG;AACF,QAAIC,QAAQ,GAACF,GAAG,CAACG,IAAJ,CAASd,IAAtB;AACA,QAAIe,WAAW,GAACf,IAAI,GAACW,GAAG,CAACG,IAAJ,CAASE,YAA9B;;AAEA,QAAIC,GAAG,GAACC,eAAGC,gBAAH,CAAoBN,QAApB,CAAR;;AACA,QAAIR,IAAI,GAACa,eAAGE,iBAAH,CAAqBL,WAArB,CAAT;;AACAE,IAAAA,GAAG,CAACI,IAAJ,CAAShB,IAAT;AACAY,IAAAA,GAAG,CAACK,EAAJ,CAAO,KAAP,EAAa,YAAI;AAACV,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAC1B,kBAAU,SADgB;AAE1B,oBAAYZ,GAAG,CAACG,IAAJ,CAASE;AAFK,OAAT;AAGf,KAHH;AAIAC,IAAAA,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAe,YAAI;AAACV,MAAAA,GAAG,CAACW,IAAJ,CAAS;AAC5B,kBAAU;AADkB,OAAT;AAEjB,KAFH;AAIA,GAfD,CAeC,OAAMC,KAAN,EAAY;AACZZ,IAAAA,GAAG,CAACa,IAAJ,CAASD,KAAT;AACA;AACD,CAnBD;eAqBezB,M","sourcesContent":["import {Router} from 'express';\r\nimport piccontroller from '../controllers/piccontroller';\r\nimport multer from 'multer';\r\nimport fs  from 'fs';\r\n\r\nconst router=Router();\r\nconst path=process.env.STATIC;\r\nconst upload=multer({dest:path});\r\n\r\nrouter.get('/:pestid',piccontroller.getPicById);\r\nrouter.post('/upload',upload.single('photo'),(req,res)=>{\r\n\ttry{\r\n\t\tvar tmp_path=req.file.path;\r\n\t\tvar target_path=path+req.file.originalname;\r\n\r\n\t\tvar src=fs.createReadStream(tmp_path);\r\n\t\tvar dest=fs.createWriteStream(target_path);\r\n\t\tsrc.pipe(dest);\r\n\t\tsrc.on('end',()=>{res.json({\r\n\t\t\t\"status\": \"success\",\r\n\t\t\t\"filename\": req.file.originalname\r\n\t\t})});\r\n\t\tsrc.on('error',()=>{res.json({\r\n\t\t\t\"status\": \"error uploading file\"\r\n\t\t})});\r\n\t\t\r\n\t}catch(error){\r\n\t\tres.send(error);\r\n\t}\r\n});\r\n\r\nexport default router;\r\n"],"file":"pictureRoute.js"}